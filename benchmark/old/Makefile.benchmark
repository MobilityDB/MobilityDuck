# Makefile for Temporal Type Benchmark
# Compares TINT (pointer-based) vs TINT2 (string-based) approaches

CXX = g++
CXXFLAGS = -std=c++17 -Wall -O2 -g
INCLUDES = -I../duckdb/src/include -I../duckdb/third_party/fmt/include
LIBS = -L../build/release/src -lduckdb -lpthread -ldl

# Extension path
EXTENSION_PATH = ../build/release/extension/mobilityduck/mobilityduck

# Benchmark targets
BENCHMARK_TEMPORAL = benchmark_temporal_types

.PHONY: all clean benchmark run-benchmark help

all: $(BENCHMARK_TEMPORAL)

# Build temporal types benchmark
$(BENCHMARK_TEMPORAL): $(BENCHMARK_TEMPORAL).cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) -o $@ $< $(LIBS)

# Run temporal types benchmark
run-benchmark: $(BENCHMARK_TEMPORAL)
	@echo "Running Temporal Types Benchmark (TINT vs TINT2)..."
	@echo "================================================"
	./$(BENCHMARK_TEMPORAL)

# Quick benchmark (default)
benchmark: run-benchmark

# Run SQL benchmark
run-sql:
	@echo "Running SQL Benchmark..."
	@echo "======================="
	../build/release/duckdb < benchmark_sql.sql

# Python SQL benchmark runner (recommended)
run-sql-python: benchmark_sql_runner.py
	@echo "Running Python SQL Benchmark..."
	@echo "================================"
	python3 benchmark_sql_runner.py

# Clean build artifacts
clean:
	rm -f $(BENCHMARK_TEMPORAL)

# Help target
help:
	@echo "Temporal Type Benchmark Makefile"
	@echo "================================"
	@echo ""
	@echo "Available targets:"
	@echo "  all              - Build temporal types benchmark (default)"
	@echo "  benchmark        - Run temporal types benchmark"
	@echo "  run-benchmark    - Run temporal types benchmark"
	@echo "  run-sql          - Run SQL benchmark"
	@echo "  clean            - Remove build artifacts"
	@echo "  help             - Show this help message"
	@echo ""
	@echo "Benchmark types:"
	@echo "  - Temporal Types: Compares TINT (pointer-based) vs TINT2 (string-based)"
	@echo "  - SQL Benchmark: Uses DuckDB's built-in profiling"
	@echo ""
	@echo "Functions tested:"
	@echo "  - Constructor: TINT(value, timestamp) vs TINT2(value, timestamp)"
	@echo "  - Cast: 'string'::TINT vs 'string'::TINT2"
	@echo "  - Value Extraction: getValue(tint) vs getValue(tint2)"
	@echo "  - Subtype: tempSubtype(tint) vs tempSubtype(tint2)"
	@echo "  - Timestamp: getTimestamp(tint) vs getTimestamp(tint2)"
	@echo "  - Sequences: sequences(tint) vs sequences(tint2)"
	@echo ""
	@echo "Prerequisites:"
	@echo "  - DuckDB built in ../duckdb/build/release"
	@echo "  - MobilityDuck extension built and available at $(EXTENSION_PATH)" 